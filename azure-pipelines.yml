# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- feature

pool:
  name: default
  demands:
  - Agent.Name -equals Dep-server
variables:
- group: var-group

stages:
  - stage:
    jobs:
    - job: Build_Npm
      steps: 
      - task: DownloadSecureFile@1
        inputs:
          secureFile: 'myapp.config'
        displayName: Download Nginx Config file
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '14.x'
          checkLatest: true
      - task: Npm@1
        inputs:
          command: 'install'
        displayName: "Install Dependency"
      
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/full-code.zip'
          replaceExistingArchive: true
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.ArtifactStagingDirectory)'
          Contents: '**.zip'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/artifacts'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifacts'
          ArtifactName: 'drop'
      
      # - task: Npm@1
      #   inputs:
      #     command: 'custom'
      #     customCommand: 'run build'
      #   displayName: "Build Created"

    - deployment: Linux_Dep
      dependsOn: Build_Npm
      environment: dev
      condition: failed()
      strategy:
        runOnce:
          deploy:
            steps:
              - task: ExtractFiles@1
                inputs:
                  archiveFilePatterns: '**/*.zip'
                  destinationFolder: '.'
                  cleanDestinationFolder: true
                  overwriteExistingFiles: true
              - task: NodeTool@0
                inputs:
                  versionSource: 'spec'
                  versionSpec: '14.x'
                  checkLatest: true
              - script: npm run start
                displayName: Server Start