# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- feature

pool:
  name: default
  demands:
  - Agent.Name -equals Dep-server
variables:
- group: var-group

stages:
  - stage:
    jobs:
    - job: Build_Npm
      steps: 
      - task: DownloadSecureFile@1
        inputs:
          secureFile: 'myapp.config'
      - task: NodeTool@0
        inputs:
          versionSource: 'spec'
          versionSpec: '14.x'
          checkLatest: true
      - task: Npm@1
        inputs:
          command: 'install'
        displayName: "Install Dependency"
      
      # - task: Npm@1
      #   inputs:
      #     command: 'custom'
      #     customCommand: 'run build'
      #   displayName: "Build Created"

    - deployment: Linux_Dep
      dependsOn: Build_Npm
      environment: env
      condition: failed()
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadSecureFile@1
                inputs:
                  secureFile: 'myapp.config'
                displayName: "Configuration file Downloaded"
              # - script: npm run start
              #   displayName: "start server"
              - script: |
                  # ls -l
                  # sudo apt install nginx -y && systemctl start nginx
                  # sudo unlink /etc/nginx/sites-enabled/default
                  # sudo cp myapp.config /etc/nginx/sites-enabled/
                  # sudo nginx -t
                  # sudo systemctl restart nginx
                  sudo apt install docker.io -y && systemctl start docker
                  sudo docker build -t $(docker_image):$(Build.BuildId) .
                  sudo docker run -d -p 3000:3000 $(docker_image):$(Build.BuildId) --name $(docker_cont)
                displayName: "Docker Deploy"
